apiVersion: v1
kind: Service
metadata:
  namespace: web
  name: listee-postgres
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: listee-postgres
---
apiVersion: v1
kind: Service
metadata:
  namespace: web
  name: listee-backend
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: listee-backend
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: listee-postgres-config
  labels:
    app: listee-postgres
data:
  POSTGRES_DB: docker
  POSTGRES_USER: docker
  POSTGRES_PASSWORD: docker
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: listee-postgres-pv-volume
  labels:
    type: local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/srv/cluster/listee/data"
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: listee-postgres-init-volumne
  labels:
    type: local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 10Mi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/srv/cluster/listee/init"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: listee-postgres-pv-claim
  labels:
    app: listee-postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: listee-postgres-init-claim
  labels:
    app: listee-postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Mi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: listee-backend-storage-volume
  namespace: web
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 512Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/srv/cluster/pizzabot/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: listee-backend-storage-claim
  namespace: web
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 512Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: web
  name: listee-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: listee-postgres
  template:
    metadata:
      labels:
        app: listee-postgres
    spec:
      containers:
      - name: pizza-v2-postgres
        image: postgres:alpine
        ports:
        - containerPort: 5432
        envFrom:
        - configMapRef:
          name: postgres-config
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgredb
        - mountPath: /docker-entrypoint-initdb.d
          name: initialization
        - mountPath: /static
          name: backend-storage
      volumes:
      - name: postgredb
        persistentVolumeClaim:
          claimName: listee-postgres-pv-claim
      - name: initialization
        persistentVolumeClaim:
          claimName: listee-postgres-init-claim
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: web
  name: listee-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: listee-api
    spec:
      containers:
      - name: listee-api
        image: registry.git.rwth-aachen.de/pizza-time/listee-api:2.0.1
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: production
        - name: PORT
          value: 3000
        - name: DB_URL
          value: pizza-v2-postgres
        - name: HOST
          value: https://pizza.bartolomey.me
        imagePullSecrets:
        - name: gitlab
        restartPolicy: Always
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: listee-ingress
  namespace: web
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/issuer: "letsencrypt-prod"
spec:
  tls: 
  - hosts:
    - pizza.bartolomey.me
    secretName: listee-tls
  rules:
  - host: pizza.bartolomey.me
    http:
      paths:
      - path: /
        backend:
          serviceName: listee-web
          servicePort: 80
      - path: /api
        backend:
          serviceName: listee-api
          servicePort: 3000
